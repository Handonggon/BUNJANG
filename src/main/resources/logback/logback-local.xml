<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 로그 레벨 -->
    <!--
		0) OFF
    	1) ERROR : 오류 메시지 표시 
        2) WARN  : 경고성 메시지 표시
        3) INFO  : 정보성 메시지 표시
        4) DEBUG : 디버깅하기 위한 메시지 표시
        5) TRACE : 상세한 메시지 표시
		6) ON
    -->

	<!-- 로그파일 저장 경로 -->
	<property name="LOG_PATH" value="/logs" />

	<!-- CONSOLE -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>
				[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} : %30logger{5} - %msg%n
			</Pattern>
		</layout>
	</appender>
	<!-- // CONSOLE -->

	<!-- SYSLOG -->
	<appender name="SYSLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/syslog/syslog.log</file>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>
				[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} : %30logger{5} - %msg%n
			</Pattern>
		</layout>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/syslog/syslog.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>
	<!-- // SYSLOG -->

	<!-- ACCESSLOG -->
	<appender name="ACCESSLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/accesslog/accesslog.log</file>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>
				%msg%n
			</Pattern>
		</layout>
        <!-- Rolling 정책 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/accesslog/accesslog.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>60</maxHistory>
		</rollingPolicy>
	</appender>
	<!-- // ACCESSLOG -->
	
	<root level="info">
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="SYSLOG" />
	</root>
	<logger name="access-log" level="info" additivity="false">
		<appender-ref ref="ACCESSLOG" />
	</logger>

	<!-- log4jdbc 옵션 설정 -->
	<logger name="jdbc" level="OFF"/>
	<!-- 커넥션 open close 이벤트를 로그로 남긴다. -->
	<logger name="jdbc.connection" additivity="false">
		<level value="warn"/>
		<appender-ref ref="CONSOLE"/> 
	</logger>
	<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
	<logger name="jdbc.sqlonly" additivity="false"> 
		<level value="info"/>  
		<appender-ref ref="CONSOLE"/> 
	</logger>
	<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.sqltiming" level="OFF"/>
	<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
	<logger name="jdbc.audit" level="OFF"/>
	<!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
	<logger name="jdbc.resultset" level="OFF"/>
	<!-- SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
	<logger name="jdbc.resultsettable" additivity="false"> 
		<level value="info"/>  
		<appender-ref ref="CONSOLE"/> 
	</logger>
<!--
	<logger name="kr.co.study.bunjang.MainApplication" level="OFF"/>
	<logger name="com.zaxxer.hikari.HikariDataSource" level="OFF"/>
	<logger name="org.hibernate.tuple.PojoInstantiator" level="OFF"/>

	<logger name="org.hibernate" level="OFF"/>

	<logger name="net.sf.log4jdbc.log" level="OFF"/>
-->
</configuration>